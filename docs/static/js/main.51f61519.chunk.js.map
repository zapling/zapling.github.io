{"version":3,"sources":["bootSequence.jsx","SSHSequence.jsx","index.jsx"],"names":["BootSequence","text","status","tasks","this","getBootTasks","className","cursor","props","delayGenerator","onTypingDone","onDone","map","task","key","data","Delay","ms","React","Component","SSHSequence","state","sections","section","push","setState","ssh","server","getTerminalPrefix","style","display","typeSection","includes","getAsciiArt","href","target","rel","Terminal","sequence","show","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51f61519.chunk.js","sourcesContent":["import React from 'react';\nimport Typist from 'react-typist';\nimport './bootSequence.css'\n\nexport default class BootSequence extends React.Component {\n\n    getBootTasks() {\n        return [\n            {text: 'Love for tacos',         status: 0},\n            {text: 'Red bull junkie',        status: 0},\n            {text: 'Love for coffe',         status: 1},\n            {text: 'Love for dogs and cats', status: 0},\n            {text: 'Speghetti code',         status: 1}\n        ];\n    }\n\n    render() {\n        const tasks = this.getBootTasks();\n\n        return (\n            <div className=\"boot\">\n                <Typist\n                    cursor={this.props.cursor}\n                    delayGenerator={() => 1 }\n                    onTypingDone={this.props.onDone}\n                >\n                    Boot sequence\n                    <ul>\n                        {tasks.map(task => (\n                            <li key={task.text}>\n                                [ <span data={task.status}>{task.status === 0 ? 'OK' : 'ERROR'}</span> ] {task.text}\n                            </li>\n                        ))}\n                    </ul>\n                    <Typist.Delay ms={500} />\n                </Typist>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Typist from 'react-typist';\nimport './SSHSequence.css';\n\nexport default class SSHSequence extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sections: []\n        }\n    }\n\n    typeSection(section) {\n        let sections = this.state.sections;\n        sections.push(section);\n        this.setState({sections: sections});\n    }\n\n    getTerminalPrefix(ssh=false) {\n        let server = ssh === true ? 'andreaspalm.se' : 'local';\n        return (\n            <span className=\"prefix\">\n                <span className=\"host\">me@{server}</span>:\n                <span className=\"tilda\">~</span>\n                <span className=\"dollar\">$</span>&nbsp;\n            </span>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"terminal\">\n                {this.getTerminalPrefix()}\n                <Typist\n                    style={{display: \"inline\"}}\n                    cursor={this.props.cursor}\n                    delayGenerator={() => 30 }\n                    onTypingDone={() => this.typeSection('ascii_art')}\n                >\n                    ssh andreaspalm.se\n                </Typist>\n\n                { this.state.sections.includes('ascii_art') ? (\n                    <Typist\n                        cursor={this.props.cursor}\n                        delayGenerator={() => 1 }\n                        onTypingDone={() => this.typeSection('palm.txt') }\n                    >\n                        { this.getAsciiArt() }\n                    </Typist>\n                ) : null}\n\n                { this.state.sections.includes('palm.txt') ? (\n                    <div>\n                        {this.getTerminalPrefix(true)}\n                        <Typist\n                            cursor={this.props.cursor}\n                            delayGenerator={() => 30}\n                            onTypingDone={() => this.typeSection('content')}\n                        >\n                            <Typist.Delay ms={700} />\n                            cat palm.text\n                        </Typist>\n                    </div>\n                ) : null}\n\n                { this.state.sections.includes('content') ? (\n                    <div className=\"palmTxt\">\n                        <Typist\n                            cursor={this.props.cursor}\n                            delayGenerator={() => 10}\n                            onTypingDone={() => this.typeSection('end')}\n                        >\n                            <p>Hi there! I am Andreas Palm.</p>\n                            <p>\n                                I'm currently a <span className=\"highlight\">[System Developer]</span> at <a href=\"https://abicart.com\" target=\"_blank\" rel=\"noopener noreferrer\">[Abicart]</a>.\n                            </p>\n                            <p>\n                                I love working with code and you could say that I'm a terminal junkie. I'm a <span className=\"highlight\">back-end</span>&nbsp;\n                                developer and have experience with <span className=\"highlight\">PHP</span> and <span className=\"highlight\">Python</span>. Currently striving to learn more <span className=\"highlight\">Go</span>.\n                            </p>\n                            <p>\n                              I navigate between servers reguarly and are no newcomer to the Terminal, I even prefer it most of the times.\n                            </p>\n                            <p>\n                              I'm always looking for new opportunities and challenges to make me an even better coder.\n                                Don't hesitate to contact me at <span className=\"highlight\">me[a]andreaspalm.se</span>\n                            </p>\n                            <p>Here is some hyperlinks ⤦️</p>\n                            <ul>\n                                <li>\n                                    <a href=\"https://linkedin.com/in/palm-andreas\"\n                                       target=\"_blank\"\n                                       rel=\"noopener noreferrer\"\n                                    >\n                                        [LinkedIn]\n                                    </a>\n                                </li>\n                                <li>\n                                    <a href=\"https://github.com/zapling\"\n                                       target=\"_blank\"\n                                       rel=\"noopener noreferrer\"\n                                    >\n                                        [Github]\n                                    </a>\n                                </li>\n                            </ul>\n                            <p>Cheers!</p>\n                        </Typist>\n                    </div>\n                ) : null }\n\n                { this.state.sections.includes('end') ? (\n                    <div>\n                        {this.getTerminalPrefix(true)}\n                    </div>\n                ) : null }\n            </div>\n        );\n    }\n\n    getAsciiArt() {\n        return (\n            <pre>\n                <span className=\"leaves\">\n                    {'            '}___{'   '}____<br/>\n                    {'          '}/' --;^/ ,-_\\       <span className=\"sun\">\\ | /</span><br/>\n                    {'         '}/ /--o\\ o-\\   \\     <span className=\"sun\">--(_)--</span><br/>\n                    {'        '}/-/-/|o<span className=\"bark\">|-|</span>\\-\\|  \\{'     '}<span className=\"sun\">/ | \\</span><br/>\n                    {'         '}'`  ` <span className=\"bark\">|-|</span> `` '<br/>\n                    {'               '}<span className=\"bark\">|-|</span><br/>\n                    {'               '}<span className=\"bark\">|-|</span><span className=\"human\">O</span><br/>\n                    {'               '}<span className=\"bark\">|-</span><span className=\"human\">(\\\\,__</span><br/>\n                    {'            '}<span className=\"sand\">...</span><span className=\"bark\">|-|</span><span className=\"human\">\\\\--,\\\\_</span><span className=\"sand\">....<br/>\n                    {'        '},;;;;;;;;;;;;;;;;;;;;;;;;,.</span><br/>\n                    {'  '}<span className=\"water\">~~</span><span className=\"sand\">,;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;,</span><span className=\"water\">~~~<br/>\n                    {'  '}~</span><span className=\"sand\">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;,</span><span className=\"water\">~~~~~</span>\n                </span>\n            </pre>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BootSequence from './bootSequence.jsx';\nimport SSHSequence from './SSHSequence.jsx';\nimport './index.css';\n\nclass Terminal extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            sequence: 0,\n            cursor: {\n                show: false\n            }\n        }\n    }\n\n    render() {\n        switch (this.state.sequence) {\n            case 0: // Boot Sequence\n                return (\n                    <BootSequence\n                        cursor={this.state.cursor}\n                        onDone={() => this.setState({sequence: 1})}\n                    />\n                );\n            case 1: // SSH Sequence\n            default:\n                return (\n                    <SSHSequence cursor={this.state.cursor} />\n                );\n        }\n    }\n}\n\nReactDOM.render(\n    <Terminal />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}